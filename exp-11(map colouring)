def backtracking_search(csp):
    def backtrack(assignment):
        if len(assignment) == len(csp['variables']):
            return assignment

        var = select_unassigned_variable(csp, assignment)
        for value in order_domain_values(csp, var, assignment):
            if is_consistent(csp, var, value, assignment):
                assignment[var] = value
                result = backtrack(assignment)
                if result:
                    return result
                del assignment[var]
        return None

    return backtrack({})

def select_unassigned_variable(csp, assignment):
    return next(var for var in csp['variables'] if var not in assignment)

def order_domain_values(csp, var, assignment):
    return csp['domains'][var]

def is_consistent(csp, var, value, assignment):
    for neighbor in csp['neighbors'][var]:
        if neighbor in assignment and assignment[neighbor] == value:
            return False
    return True

# Example CSP for map coloring
csp = {
    'variables': ['WA', 'NT', 'SA', 'Q', 'NSW', 'V', 'T'],
    'domains': {v: ['red', 'green', 'blue'] for v in ['WA', 'NT', 'SA', 'Q', 'NSW', 'V', 'T']},
    'neighbors': {
        'WA': ['NT', 'SA'],
        'NT': ['WA', 'SA', 'Q'],
        'SA': ['WA', 'NT', 'Q', 'NSW', 'V'],
        'Q': ['NT', 'SA', 'NSW'],
        'NSW': ['Q', 'SA', 'V'],
        'V': ['SA', 'NSW'],
        'T': []
    }
}

solution = backtracking_search(csp)
print("Solution:", solution)
